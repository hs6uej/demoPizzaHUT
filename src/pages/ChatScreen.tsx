import React, { useState, useEffect, useRef } from 'react';
import { useNavigate } from 'react-router-dom';
import { Pizza, Send, Shield, Volume2, ExternalLink } from 'lucide-react';

// ---------------- Types ----------------
type Sender = 'bot' | 'user';

export type Intent =
  | 'GREET'
  | 'PROMO'
  | 'PROMO_B1G1'
  | 'PROMO_TERMS'
  | 'MENU'
  | 'RECOMMEND'
  | 'SIZE'
  | 'CRUST'
  | 'VEGETARIAN'
  | 'SPICY'
  | 'ALLERGEN'
  | 'HALAL'
  | 'ORDER'
  | 'MIN_ORDER'
  | 'HOURS'
  | 'DELIVERY_AREA'
  | 'DELIVERY_FEE'
  | 'DELIVERY_ETA'
  | 'TRACK_ORDER'
  | 'CANCEL_ORDER'
  | 'MODIFY_ORDER'
  | 'PAYMENT'
  | 'WALLET'
  | 'TAX_INVOICE'
  | 'BRANCH'
  | 'CONTACT'
  | 'COMPLAINT'
  | 'THANKS'
  | 'UNKNOWN';

export interface BotReply {
  intent: Intent;
  reply: string;
  matchedKeyword?: string | null;
}

interface Message {
  id: number;
  text: string;
  sender: Sender;
  showQuickReply?: boolean;
}

// --------------- Utils: normalize & match ---------------
const toArabicDigits = (s: string) =>
  s.replace(/[‡πê-‡πô]/g, (d) => String('‡πê‡πë‡πí‡πì‡πî‡πï‡πñ‡πó‡πò‡πô'.indexOf(d)));

const stripEmojisAndSymbols = (s: string) =>
  s.replace(/[\p{Emoji_Presentation}\p{Extended_Pictographic}\p{Symbol}\p{Mark}]/gu, '');

const normalize = (input: string) => {
  let s = (input || '').toLowerCase().trim();
  s = toArabicDigits(s);
  s = stripEmojisAndSymbols(s);
  s = s
    .replace(/[‚Äê-‚Äí‚Äì‚Äî‚Äï]/g, '-') // dashes
    .replace(/[‚Äú‚Äù¬´¬ª‚Äû]/g, '"') // quotes
    .replace(/[‚Äò‚Äô‚Äπ‚Ä∫]/g, "'") // apostrophes
    .replace(/\s+/g, ' '); // collapse spaces
  return s;
};

const removeSpaces = (s: string) => s.replace(/\s+/g, '');

const includesAny = (msg: string, phrases: string[]) => {
  const m = normalize(msg);
  const mNoSpace = removeSpaces(m);
  for (const p of phrases) {
    const n = normalize(p);
    if (!n) continue;
    const nNoSpace = removeSpaces(n);
    if (m.includes(n) || mNoSpace.includes(nNoSpace)) return p; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÅ‡∏°‡∏ï‡∏ä‡πå
  }
  return null;
};

// --------------- Keyword buckets ---------------
const KW = {
  greet: ['‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ', '‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ', '‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö', '‡∏î‡∏µ‡∏Ñ‡πà‡∏∞', 'hello', 'hi', 'hey', '‡∏Æ‡∏±‡∏•‡πÇ‡∏´‡∏•', '‡∏ó‡∏±‡∏Å', '‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢'],

  promo: [
    '‡πÇ‡∏õ‡∏£',
    '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô',
    '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô',
    'promotion',
    'promo',
    'discount',
    '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î',
    '‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤',
    '‡πÇ‡∏Ñ‡πâ‡∏î',
    'code',
    '‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á',
    'coupon',
    'voucher',
    '‡∏ß‡∏≠‡∏¢‡πÄ‡∏ä‡∏≠‡∏£‡πå',
  ],
  b1g1: ['‡∏ã‡∏∑‡πâ‡∏≠ 1 ‡πÅ‡∏ñ‡∏° 1', '‡∏ã‡∏∑‡πâ‡∏≠1‡πÅ‡∏ñ‡∏°1', 'buy 1 get 1', 'buy1get1', 'b1g1', '1‡πÅ‡∏ñ‡∏°1', '‡πÇ‡∏õ‡∏£1‡πÅ‡∏ñ‡∏°1'],
  termsPromo: [
    '‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£',
    '‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏á',
    '‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏£',
    '‡πÇ‡∏õ‡∏£‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà',
    '‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô',
    '‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î',
  ],

  menu: [
    '‡πÄ‡∏°‡∏ô‡∏π',
    'menu',
    '‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á',
    '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£',
    '‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∞‡πÑ‡∏£',
    'pizza menu',
    '‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
    '‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏´‡∏ô‡∏≠‡∏£‡πà‡∏≠‡∏¢',
    '‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥',
  ],
  recommend: ['‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥', 'recommend', '‡∏ï‡∏±‡∏ß‡πÑ‡∏´‡∏ô‡∏î‡∏µ', '‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å', 'suggest', '‡∏´‡∏ô‡πâ‡∏≤‡∏Æ‡∏¥‡∏ï', '‡πÄ‡∏°‡∏ô‡∏π‡∏Æ‡∏¥‡∏ï'],
  size: ['‡∏Ç‡∏ô‡∏≤‡∏î', 'size', '‡πÑ‡∏ã‡∏™‡πå', '‡πÄ‡∏•‡πá‡∏Å ‡∏Å‡∏•‡∏≤‡∏á ‡πÉ‡∏´‡∏ç‡πà', 's m l', '‡πÑ‡∏ã‡∏ã‡πå', '‡∏Ç‡∏ô‡∏≤‡∏î‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤'],
  crust: ['‡∏Ç‡∏≠‡∏ö‡∏ä‡∏µ‡∏™', '‡∏ä‡∏µ‡∏™‡∏Ç‡∏≠‡∏ö', 'stuffed crust', 'crust', '‡∏Ç‡∏≠‡∏ö‡∏´‡∏ô‡∏≤', '‡∏Ç‡∏≠‡∏ö‡∏ö‡∏≤‡∏á', '‡∏Ç‡∏≠‡∏ö‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤'],
  vegetarian: ['‡∏°‡∏±‡∏á‡∏™‡∏ß‡∏¥‡∏£‡∏±‡∏ï‡∏¥', 'vegetarian', 'vegan', '‡∏ß‡∏µ‡πÅ‡∏Å‡∏ô', '‡πÄ‡∏à', '‡πÑ‡∏°‡πà‡∏Å‡∏¥‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠', '‡∏ú‡∏±‡∏Å‡∏•‡πâ‡∏ß‡∏ô'],
  spicy: ['‡πÄ‡∏ú‡πá‡∏î', 'spicy', '‡πÄ‡∏ú‡πá‡∏î‡πÑ‡∏´‡∏°', '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ú‡πá‡∏î', '‡πÄ‡∏ú‡πá‡∏î‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô'],
  allergen: ['‡πÅ‡∏û‡πâ', 'allergen', '‡∏ñ‡∏±‡πà‡∏ß', '‡∏ô‡∏°', '‡∏Å‡∏•‡∏π‡πÄ‡∏ï‡∏ô', 'gluten', 'lactose', '‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏õ‡∏•‡∏≠‡∏î'],
  halal: ['‡∏Æ‡∏≤‡∏•‡∏≤‡∏•', 'halal'],

  order: ['‡∏™‡∏±‡πà‡∏á', 'order', '‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏±‡πà‡∏á', '‡∏™‡∏±‡πà‡∏á‡∏¢‡∏±‡∏á‡πÑ‡∏á', '‡∏Å‡∏î‡∏™‡∏±‡πà‡∏á', '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡πà‡∏á', '‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤', '‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'],
  minOrder: ['‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥', 'min order', '‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà', '‡∏¢‡∏≠‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥', '‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó'],

  hours: ['‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á', '‡∏õ‡∏¥‡∏î‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á', '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î', '‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î', '‡πÄ‡∏ß‡∏•‡∏≤', '‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î', 'opening hours', 'close ‡∏Å‡∏µ‡πà‡πÇ‡∏°‡∏á'],

  deliveryArea: ['‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô', '‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏™‡πà‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏ô', 'deliver', '‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°', '‡∏™‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÑ‡∏´‡∏°', '‡∏™‡πà‡∏á‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà'],
  deliveryFee: ['‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á', '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á', '‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà', 'delivery fee', '‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÅ‡∏û‡∏á‡πÑ‡∏´‡∏°'],
  eta: ['‡∏Å‡∏µ‡πà‡∏ô‡∏≤‡∏ó‡∏µ', '‡∏ô‡∏≤‡∏ô‡πÑ‡∏´‡∏°', '‡∏ô‡∏≤‡∏ô‡πÅ‡∏Ñ‡πà‡πÑ‡∏´‡∏ô', '‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á', 'delivery time', '‡∏ñ‡∏∂‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏´‡∏£‡πà', '‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏µ‡πà‡∏ô‡∏≤‡∏ó‡∏µ'],

  track: ['‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°', 'track', '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå', 'order status', '‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏á', '‡∏Ç‡∏≠‡∏á‡∏ñ‡∏∂‡∏á‡πÑ‡∏´‡∏ô', '‡πÄ‡∏ä‡πá‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'],
  cancel: ['‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', 'cancel', '‡∏Ç‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå', '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠'],
  modify: ['‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏°‡∏ô‡∏π', '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠', '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå'],

  pay: ['‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô', '‡∏à‡πà‡∏≤‡∏¢‡∏¢‡∏±‡∏á‡πÑ‡∏á', 'payment', '‡∏ä‡∏≥‡∏£‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏á', '‡∏ß‡∏¥‡∏ò‡∏µ‡∏à‡πà‡∏≤‡∏¢', '‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô', '‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏à‡πà‡∏≤‡∏¢', '‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£'],
  wallet: ['wallet', '‡∏ó‡∏£‡∏π‡∏ß‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏ó', 'true money', 'truemoney', 'promptpay', 'line pay', '‡∏≠‡∏µ‡∏ß‡∏≠‡∏•‡πÄ‡∏•‡πá‡∏ó', '‡∏≠‡∏µ‡∏ß‡∏≠‡πÄ‡∏•‡∏ó'],
  tax: ['‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ', '‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à', 'vat', 'e-tax', '‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö', '‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö'],

  branch: ['‡∏™‡∏≤‡∏Ç‡∏≤', '‡πÉ‡∏Å‡∏•‡πâ‡∏â‡∏±‡∏ô', '‡πÉ‡∏Å‡∏•‡πâ‡∏ö‡πâ‡∏≤‡∏ô', 'branch', '‡∏™‡∏≤‡∏Ç‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏â‡∏±‡∏ô', '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≤‡∏Ç‡∏≤', 'map ‡∏™‡∏≤‡∏Ç‡∏≤'],
  contact: ['‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£', '‡πÇ‡∏ó‡∏£', 'call', 'contact', '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç', '‡∏Ñ‡∏≠‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå', '‡∏Ñ‡∏≠‡∏•‡πÄ‡∏ã‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå', 'call center'],
  complaint: ['‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', '‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏à', 'feedback', '‡∏Ñ‡∏≠‡∏°‡πÄ‡∏û‡∏•‡∏ô', '‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤', '‡∏ï‡∏¥‡∏ä‡∏°'],
  thanks: ['‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì', 'thanks', 'thank you', 'thank', '‡∏ã‡∏≤‡∏ö‡∏ã‡∏∂‡πâ‡∏á', '‡∏Ç‡∏≠‡∏ö‡πÉ‡∏à'],
} as const;

// --------------- Intent resolver (priority-based) ---------------
function resolveIntent(message: string): { intent: Intent; matchedKeyword?: string | null } {
  const checks: Array<[Intent, readonly string[]]> = [
    ['PROMO_B1G1', KW.b1g1],
    ['PROMO_TERMS', KW.termsPromo],
    ['PROMO', KW.promo],
    ['GREET', KW.greet],
    ['MENU', KW.menu],
    ['RECOMMEND', KW.recommend],
    ['SIZE', KW.size],
    ['CRUST', KW.crust],
    ['VEGETARIAN', KW.vegetarian],
    ['SPICY', KW.spicy],
    ['ALLERGEN', KW.allergen],
    ['HALAL', KW.halal],
    ['ORDER', KW.order],
    ['MIN_ORDER', KW.minOrder],
    ['HOURS', KW.hours],
    ['DELIVERY_AREA', KW.deliveryArea],
    ['DELIVERY_FEE', KW.deliveryFee],
    ['DELIVERY_ETA', KW.eta],
    ['TRACK_ORDER', KW.track],
    ['CANCEL_ORDER', KW.cancel],
    ['MODIFY_ORDER', KW.modify],
    ['PAYMENT', KW.pay],
    ['WALLET', KW.wallet],
    ['TAX_INVOICE', KW.tax],
    ['BRANCH', KW.branch],
    ['CONTACT', KW.contact],
    ['COMPLAINT', KW.complaint],
    ['THANKS', KW.thanks],
  ];

  for (const [intent, bucket] of checks) {
    const hit = includesAny(message, bucket as string[]);
    if (hit) return { intent, matchedKeyword: hit };
  }
  return { intent: 'UNKNOWN', matchedKeyword: null };
}

// --------------- Reply bank ---------------
function replyForIntent(intent: Intent): string {
  switch (intent) {
    case 'GREET':
      return '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üòä ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà Pizza 1150 ‡∏Ñ‡πà‡∏∞ ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?';
    case 'PROMO':
      return '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ Pizza 1150 ‡∏°‡∏µ‡πÇ‡∏õ‡∏£ **‡∏ã‡∏∑‡πâ‡∏≠ 1 ‡πÅ‡∏ñ‡∏° 1** ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏π‡∏õ‡∏≠‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏£‡πà‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ üéâ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î ‡πÉ‡∏™‡πà‡∏ï‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞';
    case 'PROMO_B1G1':
      return '‡πÇ‡∏õ‡∏£‡∏ã‡∏∑‡πâ‡∏≠ 1 ‡πÅ‡∏ñ‡∏° 1 ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏±‡∏ö‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î/‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡πà‡∏ß‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤" ‡∏Ñ‡πà‡∏∞ üéâ';
    case 'PROMO_TERMS':
      return '‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡∏Ñ‡πà‡∏∞ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üòä';
    case 'MENU':
      return '‡πÄ‡∏°‡∏ô‡∏π‡∏Æ‡∏¥‡∏ï: ‡∏Æ‡∏≤‡∏ß‡∏≤‡∏¢‡πÄ‡∏≠‡∏µ‡πâ‡∏¢‡∏ô, ‡πÄ‡∏õ‡∏õ‡πÄ‡∏õ‡∏≠‡πÇ‡∏£‡∏ô‡∏µ, ‡∏°‡∏µ‡∏ó‡πÄ‡∏•‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå, ‡∏ã‡∏µ‡∏ü‡∏π‡πâ‡∏î + ‡∏Ç‡∏≠‡∏á‡∏ó‡∏≤‡∏ô‡πÄ‡∏•‡πà‡∏ô (‡πÑ‡∏Å‡πà‡∏ß‡∏¥‡∏á‡∏™‡πå, ‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡πá‡∏ï, ‡∏ä‡∏µ‡∏™‡∏™‡∏ï‡∏¥‡πä‡∏Å) ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡∏Ñ‡πà‡∏∞ üçïü•§';
    case 'RECOMMEND':
      return '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ‚Äú‡∏°‡∏µ‡∏ó‡πÄ‡∏•‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‚Äù ‡∏™‡∏≤‡∏¢‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡πÅ‡∏•‡∏∞ ‚Äú‡∏ã‡∏µ‡∏ü‡∏π‡πâ‡∏î‡πÄ‡∏î‡∏≠‡∏•‡∏∏‡∏Å‡∏ã‡πå‚Äù ‡∏™‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏•‡∏Ñ‡πà‡∏∞ ‡∏ñ‡πâ‡∏≤‡∏ä‡∏≠‡∏ö‡∏ä‡∏µ‡∏™ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏ö‡∏ä‡∏µ‡∏™‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üßÄ';
    case 'SIZE':
      return '‡∏°‡∏µ 3 ‡∏Ç‡∏ô‡∏≤‡∏î: ‡πÄ‡∏•‡πá‡∏Å, ‡∏Å‡∏•‡∏≤‡∏á, ‡πÉ‡∏´‡∏ç‡πà ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üòã';
    case 'CRUST':
      return '‡∏Ç‡∏≠‡∏ö‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤: ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤, ‡∏ä‡∏µ‡∏™ ‡πÅ‡∏•‡∏∞‡∏ä‡∏µ‡∏™‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π) ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡πà‡∏∞ üßÄ';
    case 'VEGETARIAN':
      return '‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏™‡∏±‡∏ï‡∏ß‡πå/‡∏ú‡∏±‡∏Å‡∏•‡πâ‡∏ß‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ ‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ ü•¶';
    case 'SPICY':
      return '‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ú‡πá‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏ñ‡∏∂‡∏á‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡πÑ‡∏õ‡∏ã‡∏µ‡πà‡πÄ‡∏õ‡∏õ‡πÄ‡∏õ‡∏≠‡πÇ‡∏£‡∏ô‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ó‡∏≤‡∏ô‡πÄ‡∏ú‡πá‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ üå∂Ô∏è';
    case 'ALLERGEN':
      return '‡∏´‡∏≤‡∏Å‡πÅ‡∏û‡πâ‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‚úÖ';
    case 'HALAL':
      return '‡∏ö‡∏≤‡∏á‡∏™‡∏≤‡∏Ç‡∏≤‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏Æ‡∏≤‡∏•‡∏≤‡∏•‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏≤‡∏Ç‡∏≤‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚ò™Ô∏è';
    case 'ORDER':
      return '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏¢!" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î ‡∏Ç‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üì≤';
    case 'MIN_ORDER':
      return '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡∏≠‡∏î‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ñ‡πà‡∏∞ ‡πÅ‡∏ï‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ô‡∏∞‡∏Ñ‡∏∞ üöö';
    case 'HOURS':
      return 'Pizza 1150 ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô **10:00‚Äì23:00 ‡∏ô.** (‡∏≠‡∏≤‡∏à‡∏ï‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏≤‡∏Ç‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢) üïô';
    case 'DELIVERY_AREA':
      return '‡∏°‡∏µ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏´‡∏•‡∏≤‡∏¢‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡πà‡∏∞ ‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üó∫Ô∏è';
    case 'DELIVERY_FEE':
      return '‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ç‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡πÜ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ñ‡πà‡∏∞ ‚úÖ';
    case 'DELIVERY_ETA':
      return '‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á **‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 30‚Äì45 ‡∏ô‡∏≤‡∏ó‡∏µ** ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏™‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡∏à‡∏£‡∏≤‡∏à‡∏£‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ñ‡πà‡∏∞ üö¶';
    case 'TRACK_ORDER':
      return '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ô‡πÉ‡∏ö‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡πâ‡∏≤ ‚Äú‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‚Äù ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞ üîé';
    case 'CANCEL_ORDER':
      return '‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ 1150 ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏™‡∏±‡πà‡∏á‡∏à‡∏∞‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡πà‡∏∞ üìû';
    case 'MODIFY_ORDER':
      return '‡∏´‡∏•‡∏±‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏≠‡∏≤‡∏à‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡πà‡∏∞ ‡πÇ‡∏ó‡∏£ 1150 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞';
    case 'PAYMENT':
      return '‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á, ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï, ‡πÇ‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ ‡πÅ‡∏•‡∏∞ e-Wallet (PromptPay, TrueMoney, LINE Pay) ‡∏Ñ‡πà‡∏∞ üí≥üíµ';
    case 'WALLET':
      return '‡∏à‡πà‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô e-Wallet ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ï‡πå ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏û‡∏≤‡πÑ‡∏õ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚úÖ';
    case 'TAX_INVOICE':
      return '‡∏Ç‡∏≠‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ/‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡πÇ‡∏î‡∏¢‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏µ‡∏¢‡∏†‡∏≤‡∏©‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏Ñ‡πà‡∏∞ üßæ';
    case 'BRANCH':
      return '‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏≤‡∏Ç‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‚Äú‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏≤‡∏Ç‡∏≤‚Äù ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ï‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≤‡∏Ç‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡πà‡∏∞ üìç';
    case 'CONTACT':
      return '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Pizza 1150 ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà **1150** ‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ ‚òéÔ∏è';
    case 'COMPLAINT':
      return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡πà‡∏∞ üôè ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ó‡∏£ 1150 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡πà‡∏∞';
    case 'THANKS':
      return '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ Pizza 1150 ‡∏Ñ‡πà‡∏∞ üçïüòä';
    default:
      return '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ Pizza 1150 ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ô‡∏µ‡πâ üôè ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏¢!" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏∞‡∏Ñ‡∏∞';
  }
}

// --------------- Bot engine (public) ---------------
export function getBotResponse(message: string): BotReply {
  const { intent, matchedKeyword } = resolveIntent(message);
  return {
    intent,
    reply: replyForIntent(intent),
    matchedKeyword,
  };
}

// --------------- Component ---------------
const ChatScreen: React.FC = () => {
  const navigate = useNavigate();
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const listRef = useRef<HTMLDivElement>(null);

  // Welcome message
  useEffect(() => {
    setMessages([
      {
        id: Date.now(),
        sender: 'bot',
        text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ Pizza 1150 ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞ üçï',
        showQuickReply: true,
      },
    ]);
  }, []);

  // Auto-scroll to bottom when messages change
  useEffect(() => {
    listRef.current?.scrollTo({ top: listRef.current.scrollHeight, behavior: 'smooth' });
  }, [messages]);

  const handleSendMessage = () => {
    const trimmed = input.trim();
    if (!trimmed) return;

    const userId = Date.now();
    const botId = userId + 1;

    const userMessage: Message = {
      id: userId,
      sender: 'user',
      text: trimmed,
    };

    const { reply } = getBotResponse(trimmed);

    const botReply: Message = {
      id: botId,
      sender: 'bot',
      text: reply,
      showQuickReply: true,
    };

    setMessages((prev) => [...prev, userMessage, botReply]);
    setInput('');
  };

  const handleKeyDown: React.KeyboardEventHandler<HTMLInputElement> = (e) => {
    if (e.key === 'Enter') {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const handleStartOrder = () => {
    navigate('/login');
  };
  
  const shouldShowQuickReply = messages.length > 0 && messages[messages.length - 1].sender === 'bot' && messages[messages.length - 1].showQuickReply;

  return (
    <div className="flex flex-col h-full bg-[#7994A0]">
      {/* Header */}
      <div className="bg-[#405664] text-white p-3 flex items-center justify-between shadow-md flex-shrink-0">
        <div className="flex items-center gap-3">
          <Shield size={24} />
          <h1 className="font-bold">Pizza Hut 1150</h1>
        </div>
        <div className="flex items-center gap-4">
          <Volume2 size={20} />
          <ExternalLink size={20} />
        </div>
      </div>

      {/* Message Area */}
      <div ref={listRef} className="flex-1 overflow-y-auto p-4 space-y-4">
        {messages.map((msg) => (
          <div
            key={msg.id}
            className={`flex items-end gap-2 ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            <div
              className={`max-w-[75%] rounded-lg px-3 py-2 ${
                msg.sender === 'user' ? 'bg-[#90E348] text-black' : 'bg-white text-black'
              }`}
            >
              <p className="text-sm whitespace-pre-wrap">{msg.text}</p>
            </div>
          </div>
        ))}
      </div>

      {/* Quick Reply Button */}
      {shouldShowQuickReply && (
        <div className="fixed bottom-20 right-4 z-10">
          <button
            onClick={handleStartOrder}
            className="bg-red-600 text-white font-semibold py-2 px-4 rounded-full shadow-lg flex items-center justify-center gap-2 text-sm hover:bg-red-700 transition-colors"
            aria-label="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡∏ã‡∏ã‡πà‡∏≤"
          >
            <Pizza size={16} />
            ‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡∏¢!
          </button>
        </div>
      )}

      {/* Input Area */}
      <div className="bg-white p-2 flex items-center gap-2 border-t flex-shrink-0">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyDown={handleKeyDown}
          placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°..."
          className="flex-1 bg-gray-100 rounded-full px-4 py-2 outline-none"
          aria-label="‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"
        />
        <button
          onClick={handleSendMessage}
          className="bg-red-600 text-white rounded-full p-2"
          aria-label="‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"
        >
          <Send size={20} />
        </button>
      </div>
    </div>
  );
};

export default ChatScreen;